4/9/21
------
X -update cookiecutter template makefile and notes files
X -choose project name
X -final investigation of dearpygui vs kivy (+kivymd)
    [dearpygui mobile won't be ready in time. Use this if you want to build a desktop app, use kivy if you want to build mobile. Leaning mobile - dearpygui looks cool but I feel if I'm going to do something non-streamlit/dash, I should make it REALLY different. I'm now thinking the gans could be a problem though - gpt3 is just an api so that's fine, but I'd need to host the gans somewhere. This is meant to be pretty open ended though so I could do gan stuff on paperspace and then a voice app or something else for mobile (spoken/written bullet points -> speech in my voice?). Time may be a constraint though if I try to do both - gpt3 trial expires at end of June. Maybe learning fund can help out there.]
X -make new git project
X -write project requirements
X -write premortem
-write lessons from last time

4/10/21
-------
X -write lessons from last time
    X -documented various project ideas
    X -looked through openai repos for more ideas. Briefly tried out dall-e notebook.
X -try out openai pypi package to make sure I can communicate w/ gpt3 programmatically
    -if necessary, write my own helper functions to wrap common actions
X -choose method of loading api key and write func
    [dotfile or env var both supported]
X -define constants to easily access engine names by index and view prices
X -watch video on sirens (in this context, basically a way to create better combinations of inputs (e.g. images) than simple interpolation)
X -run dall-e and deep-daze demo notebooks in colab
-look into how to use various gan packages (install? clone?)
-make sure I can still access paperspace
    -maybe update dotfiles/envs etc. on machine if necessary

4/11/21
-------
-try out chronology lib for programmatic gpt3 access and see if it looks helpful compared to openai lib
    -if necessary, write my own helper functions to wrap common actions
-make sure I can still access paperspace
    -maybe update dotfiles/envs etc. on machine if necessary
    -copy over openai dotfile
-choose a first use case to work on
    -download/install a gan package?



-------------------------------------------------------------------------------
easy tasks for low energy days

-

-------------------------------------------------------------------------------
backlog

-store api key somewhere (drive? dropbox?) and write load func. Could have local config file but need to make this available when working in paperspace etc.
-look through and/or download coursera video gan notebook
-review kilcher videos on dall-e, clip, maybe other gans
-look through instructions/demo for voice cloning app - how much audio do we need? Does it need to be custom or could I plausibly find enough for a famous person?
